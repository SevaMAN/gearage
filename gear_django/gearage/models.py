from django.db import models

# class Guitar(models.Model):
#     name = models.CharField(max_length=300)
#     name = models.CharField(max_length=300)
class Guitar(models.Model):
    name = models.CharField(max_length=300)
    body_width = models.TextField(db_column='Body Width', blank=True)
    number_of_sliders_faders = models.TextField(db_column='Number of Sliders/Faders', blank=True)
    usb = models.TextField(db_column='USB', blank=True)
    electronics = models.TextField(db_column='Electronics', blank=True)
    number_of_strings = models.TextField(db_column='Number of Strings', blank=True)
    string_type = models.TextField(db_column='String Type', blank=True)
    midi_i_o = models.TextField(db_column='MIDI I/O', blank=True)
    body_type = models.TextField(db_column='Body Type', blank=True)
    controls = models.TextField(db_column='Controls', blank=True)
    type_of_keys = models.TextField(db_column='Type of Keys', blank=True)
    neck_pickup = models.TextField(db_column='Neck Pickup', blank=True)
    number_of_performance_pads = models.TextField(db_column='Number of Performance Pads', blank=True)
    neck_shape = models.TextField(db_column='Neck Shape', blank=True)
    number_of_frets = models.TextField(db_column='Number of Frets', blank=True)
    middle_pickup = models.TextField(db_column='Middle Pickup', blank=True)
    number_of_keys = models.TextField(db_column='Number of Keys', blank=True)
    body_finish = models.TextField(db_column='Body Finish', blank=True)
    type = models.TextField(db_column='Type', blank=True)
    fingerboard_inlay = models.TextField(db_column='Fingerboard Inlay', blank=True)
    pedal_inputs = models.TextField(db_column='Pedal Inputs', blank=True)
    analog_inputs = models.TextField(db_column='Analog Inputs', blank=True)
    finish = models.TextField(db_column='Finish', blank=True)
    case_included = models.TextField(db_column='Case Included', blank=True)
    top_material = models.TextField(db_column='Top Material', blank=True)
    number_of_models = models.TextField(db_column='Number of Models', blank=True)
    manufacturer_part_number = models.TextField(db_column='Manufacturer Part Number', blank=True)
    bridge_tailpiece = models.TextField(db_column='Bridge/Tailpiece', blank=True)
    neck_wood = models.TextField(db_column='Neck Wood', blank=True)
    tuning_machines = models.TextField(db_column='Tuning Machines', blank=True)
    other_controllers = models.TextField(db_column='Other Controllers', blank=True)
    body_style_shape = models.TextField(db_column='Body Style/Shape', blank=True)
    amp_modeling = models.TextField(db_column='Amp Modeling', blank=True)
    analog_outputs = models.TextField(db_column='Analog Outputs', blank=True)
    body_depth = models.TextField(db_column='Body Depth', blank=True)
    scale_length = models.TextField(db_column='Scale Length', blank=True)
    bridge_material = models.TextField(db_column='Bridge Material', blank=True)
    body_bracing = models.TextField(db_column='Body Bracing', blank=True)
    nut_width = models.TextField(db_column='Nut Width', blank=True)
    other_outputs = models.TextField(db_column='Other Outputs', blank=True)
    nut_saddle_material = models.TextField(db_column='Nut/Saddle Material', blank=True)
    top_wood = models.TextField(db_column='Top Wood', blank=True)
    power_supply_included = models.TextField(db_column='Power Supply Included', blank=True)
    bridge_pickup = models.TextField(db_column='Bridge Pickup', blank=True)
    back_sides_wood = models.TextField(db_column='Back & Sides Wood', blank=True)
    power_supply = models.TextField(db_column='Power Supply', blank=True)
    computer_connection = models.TextField(db_column='Computer Connection', blank=True)
    number_of_effects = models.TextField(db_column='Number of Effects', blank=True)
    digital_outputs = models.TextField(db_column='Digital Outputs', blank=True)
    body_material = models.TextField(db_column='Body Material', blank=True)
    number_of_pickups = models.TextField(db_column='Number of Pickups', blank=True)
    aftertouch = models.TextField(db_column='Aftertouch', blank=True)
    digital_inputs = models.TextField(db_column='Digital Inputs', blank=True)
    strings = models.TextField(db_column='Strings', blank=True)
    left_right_handed = models.TextField(db_column='Left-/Right-handed', blank=True)
    tuners = models.TextField(db_column='Tuners', blank=True)
    weight = models.TextField(db_column='Weight', blank=True)
    width = models.TextField(db_column='Width', blank=True)
    url = models.TextField(blank=True)
    number_of_encoders_pots = models.TextField(db_column='Number of Encoders/Pots', blank=True)
    binding = models.TextField(db_column='Binding', blank=True)
    depth = models.TextField(db_column='Depth', blank=True)
    height = models.TextField(db_column='Height', blank=True)
    neck_material = models.TextField(db_column='Neck Material', blank=True)
    batteries = models.TextField(db_column='Batteries', blank=True)
    dedicated_transport_control = models.TextField(db_column='Dedicated Transport Control', blank=True)
    color = models.TextField(db_column='Color', blank=True)
    pedal_type = models.TextField(db_column='Pedal Type', blank=True)
    fingerboard_material = models.TextField(db_column='Fingerboard Material', blank=True)
    overall_length = models.TextField(db_column='Overall Length', blank=True)
    other_inputs = models.TextField(db_column='Other Inputs', blank=True)
    class Meta:
        db_table = 'gearage_guitar'
